pipelines:
  - name: pipe_master
    configuration:
      chronological: true
      environmentVariables:
        readOnly:
          version: ''
          pipe_master_ip: "10.70.30.132"
    steps:
      - name: deploy
        type: Bash
        configuration:
          integrations:
            - name: pipe_instance_pem
            - name: pipe_master_notifications
          inputResources:
            - name: pipe_master_wh
        execution:
          onExecute:
            - echo "will show commits"
#            - if [ -z $version ]; then cp_version=$(echo "$res_pipe_master_wh_payload" | jq '.version' -r); else cp_version=$version; fi
#            - newCommits=$(echo "$res_pipe_master_wh_payload" | jq '.newCommits' -r)
#            - send_notification pipe_master_notifications --text "deploying ${cp_version} to pipe-master "
#            - newCommits=${newCommits//nL/'\n'}
#            - if [ -z $version ]; then send_notification pipe_master_notifications --text "Commits since last deployment - \n ${newCommits}" ; fi
#            - echo "$int_pipe_instance_pem_key" > pipelines-access.pem
#            - chmod 400 pipelines-access.pem
#            - ssh -o "StrictHostKeyChecking no" -i pipelines-access.pem avic@$pipe_master_ip ./upgradePipelines.sh $cp_version
#          onSuccess:
#            - send_notification pipe_master_notifications --text "successfully deployed ${cp_version} to pipe-master"
#          onFailure:
#            - send_notification pipe_master_notifications --text "deployment to pipe-master failed, <!here> $step_url"


#      - name: send_notifications
#        type: Bash
#        configuration:
#          integrations:
#            - name: test_automation
#          inputResources:
#            - name: autoScripts
#              trigger: False
#          inputSteps:
#            - name: automation_win_NodePool
#        execution:
#          onStart:
#            - send_notification pipe_master_notifications --text "successfully tested ${cp_version} on pipe-master"