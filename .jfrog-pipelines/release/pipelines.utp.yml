resources:
  - name: utp_deployment_incoming_webhook_pipelines
    type: IncomingWebhook
    configuration:
      webhookName: utp_deployment
  - name: pipelines_utp_bitbucket
    type: GitRepo
    configuration:
      path: pip/controlplane
      gitProvider: JFrog_bitbucket
      branches:
        include: ^{{gitBranch}}$
      buildOn:
        commit: false

pipelines:
  {{ if not (hasPrefix "preRelease" "{{gitBranch}}") }}
  - name: utp_tests_pipelines
    configuration:
      integrations:
        - name: jfdev_agent
        - name: docker_jfrog_io_reader
        - name: entplus_jfrog_io_docker
        - name: entplus_pipelines
        - name: entplus_deployer
        - name: slack_dev_foundation_alerts
      environmentVariables:
        readOnly:
          UTP_DEPLOYMENT_INCOMING_WEBHOOK_NAME:
            default: utp_deployment_incoming_webhook_pipelines
    steps:
      - name: parse_utp_payload
        type: Bash
        configuration:
          inputResources:
            - name: pipelines_utp_bitbucket
              trigger: false
            - name: utp_deployment_incoming_webhook_pipelines
              trigger: false
        execution:
          onStart:
            - source "${res_pipelines_utp_bitbucket_resourcePath}/build/ci/pipelines_step_setup.sh"
            - stepCommons_load_script build/ci/pipelines_utp_utils.sh
          onExecute:
            - parse_incoming_utp_payload "${UTP_DEPLOYMENT_INCOMING_WEBHOOK_NAME}"
            - set_utp_links_pipeline_url
            - set_utp_links_pipeline_status "RUNNING"
          onSuccess:
            - stepCommons_on_success || echo "[ERROR] stepCommons_on_success returned an error"
          onFailure:
            - stepCommons_on_failure || echo "[ERROR] stepCommons_on_failure returned an error"
      - name: pipelines_tests
        type: Bash
        configuration:
          nodePool: pipelines_u20
          inputSteps:
            - name: parse_utp_payload
          inputResources:
            - name: pipelines_utp_bitbucket
          integrations:
            - name: bsBitbucket
            - name: test_automation
          environmentVariables:
            JFROGPLATFORM_URL:
              description: The base URL of the instance that will be tested
              default: "${UTP_PLATFORM_URL}"
              allowCustom: true
            JFROGPLATFORM_ADMIN_USER:
              description: The admin username for the instance
              default: "${UTP_ADMIN_USER}"
              allowCustom: true
            JFROGPLATFORM_ADMIN_PASSWORD:
              description: The admin password for the instance
              default: "${UTP_ADMIN_PASSWORD}"
              allowCustom: true
            JFROGPLATFORM_VERSION:
              description: The Pipelines version to be tested
              default: "${UTP_pipelines}"
              allowCustom: true
            sourceRepoFullName:
              description: The SCM repository that will be used as a pipeline source in the tests
              default: PIPA/Org_test_Automation
              allowCustom: true
              values:
                - PIP/automation-e2e-ymls
                - PIPA/Org_test_Automation
            sourceRepoBranch:
              description: The branch that will be added as a pipeline source in the tests
              default: master
              allowCustom: true
            scmUrl:
              description: The URL for the SCM
              default: ${int_test_automation_GITHUB_URL}
              allowCustom: true
              values:
                - ${int_bsBitbucket_url}
                - ${int_test_automation_GITHUB_URL}
            scmUserName:
              description: The user name of the SCM
              default: "PIPA"
              allowCustom: true
              values:
                - "PIPA"
                - ${int_bsBitbucket_username}
            scmToken:
              description: The token for the SCM
              default: ${int_test_automation_GITHUB_TOKEN}
              allowCustom: true
              values:
                - ${int_bsBitbucket_token}
                - ${int_test_automation_GITHUB_TOKEN}
            scmDisplayName:
              description: The name of the SCM
              default: "GitHub"
              allowCustom: true 
              values:
                - "Bitbucket Server"
                - "GitHub"    
        execution:
          onStart:
            - source "${res_pipelines_utp_bitbucket_resourcePath}/build/ci/pipelines_step_setup.sh"
          onExecute:
            - |
              if [ -z "$JFROGPLATFORM_URL"]; then
                JFROGPLATFORM_URL=$UTP_PLATFORM_URL
              fi
              if [ -z "$JFROGPLATFORM_ADMIN_USER"]; then
                JFROGPLATFORM_ADMIN_USER=$UTP_ADMIN_USER
              fi
              if [ -z "$JFROGPLATFORM_ADMIN_PASSWORD"]; then
                JFROGPLATFORM_ADMIN_PASSWORD=$UTP_ADMIN_PASSWORD
              fi
              if [ -z "$JFROGPLATFORM_VERSION"]; then
                JFROGPLATFORM_VERSION=$UTP_pipelines
              fi
            - echo "Running pipelines e2e tests against ${JFROGPLATFORM_URL} version ${JFROGPLATFORM_VERSION}"
            - jfrog rt docker-pull entplus.jfrog.io/jfrog/pipelines-automation-e2e:${JFROGPLATFORM_VERSION} pipelines-docker
            - mkdir -p ${step_workspace_dir}/cypress/videos
            - mkdir -p ${step_workspace_dir}/cypress/screenshots
            - |
              docker run \
                -v ${step_workspace_dir}/cypress/videos:/tests/cypress/videos \
                -v ${step_workspace_dir}/cypress/screenshots:/tests/cypress/screenshots \
                -e CYPRESS_BASE_URL="$JFROGPLATFORM_URL" \
                -e cypress_artifactoryAdminUserName="$JFROGPLATFORM_ADMIN_USER" \
                -e cypress_artifactoryAdminPassword="$JFROGPLATFORM_ADMIN_PASSWORD" \
                -e cypress_scmUrl="$scmUrl" \
                -e cypress_scmUserName="$scmUserName" \
                -e cypress_scmToken="$scmToken" \
                -e cypress_scmDisplayName="$scmDisplayName" \
                -e cypress_sourceRepoFullName="$sourceRepoFullName" \
                -e cypress_sourceRepoBranch="$sourceRepoBranch" \
                entplus.jfrog.io/jfrog/pipelines-automation-e2e:${JFROGPLATFORM_VERSION}
          onSuccess:
            - stepCommons_on_success || echo "[ERROR] stepCommons_on_success returned an error"
          onFailure:
            - add_run_files ${step_workspace_dir}/cypress cypress
            - stepCommons_on_failure || echo "[ERROR] stepCommons_on_failure returned an error"

      - name: pipelines_set_utp_status
        type: Bash
        configuration:
          inputResources:
            - name: pipelines_utp_bitbucket
              trigger: false
          inputSteps:
            - name: pipelines_tests
              status:
                - success
                - failure
                - skipped
                - cancelled
                - error
                - unstable
                - timeout
        execution:
          onStart:
            - source "${res_pipelines_utp_bitbucket_resourcePath}/build/ci/pipelines_step_setup.sh"
            - stepCommons_load_script build/ci/pipelines_utp_utils.sh
          onExecute:
            - update_approval_status_of_test
          onSuccess:
            - stepCommons_on_success || echo "[ERROR] stepCommons_on_success returned an error"
          onFailure:
            - stepCommons_on_failure || echo "[ERROR] stepCommons_on_failure returned an error"
  {{end}}